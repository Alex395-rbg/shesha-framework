name: shesha-reactjs-build-test

on:
  pull_request:
    branches:
      - main

permissions:
  pull-requests: write
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./shesha-reactjs
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        id: build
        run: npm run build

      - name: Tag PR on Success
        if: ${{ steps.build.outcome == 'success' }}
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo, number } = context.repo;
            await github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: number,
              labels: ['shesha-reactjs-build-passed']
            });
            try {
              await github.rest.issues.removeLabel({
                owner,
                repo,
                issue_number: number,
                name: 'shesha-reactjs-build-failed'
              });
            } catch (error) {
              // Ignore error if label doesn't exist
            }

      - name: Tag PR on Failure
        if: ${{ steps.build.outcome == 'failure' }}
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo, number } = context.repo;
            await github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: number,
              labels: ['shesha-reactjs-build-failed']
            });
            try {
              await github.rest.issues.removeLabel({
                owner,
                repo,
                issue_number: number,
                name: 'shesha-reactjs-build-passed'
              });
            } catch (error) {
              // Ignore error if label doesn't exist
            }

