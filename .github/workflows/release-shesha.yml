name: release-shesha

on:
  workflow_dispatch:
      inputs:
        tag:
          description: 'Tag to release'
env:
  NODE_VERSION: '15'
  PYTHON_VERSOIN: '2.7.18'
  DOTNET_VERSION: '6.x'

jobs:
  # build the project
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:

      # ============ CHECKOUT CODE ===============

      # checkout latest code
      - name: Get Sources
        uses: actions/checkout@v2
        with:
          clean: true
          ref: refs/tags/${{ inputs.tag }}

      # ============ GET TAG NAME ===============

      # Get tag
      - name: Get tag name
        id: get_tag_name
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      # ============ SETUP ENVIRONMENTS ===============

      # Setup Node for shesha-reactjs
      - name: Setup Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'
      # Setup Python for for shesha-reactjs (solution currently needs python2 to run)
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSOIN }}
      # Setup DOTNET for shesha-core
      - name: Use .NET Core SDK ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      # ============ RESOLVE DEPENDENCIES ===============

      # DOTNET restore for shesha-core
      - name: Dotnet Restore
        run: dotnet restore --configfile .nuget/NuGet.Config --verbosity detailed
        working-directory: ./shesha-core
      # Install dependencies for shesha-reactjs
      - name: Install Dependencies
        run: npm install --legacy-peer-deps
        working-directory: ./shesha-reactjs

      # ============ METADATA ===============

      # Update package.json tag
      - name: Update package.json
        uses: reedyuk/npm-version@1.1.1
        with:
          version: ${{ steps.get_tag_name.outputs.VERSION }}
          package: 'shesha-reactjs/'
      
      # ============ BUILD ===============

      # Build shesha-core (Solution) for production
      - name: Dotnet Build
        run: dotnet build --configuration Release
        working-directory: ./shesha-core
      # Build shesha-reactjs for production
      - name: Build shesha-reactjs for Production
        run: npm run build
        working-directory: ./shesha-reactjs

      # ============ PACK ===============

      # Pack shesha-core (Solution)
      - name: Dotnet Pack shesha-core
        run: dotnet pack -o ../dist -p:PackageVersion=${{ steps.get_tag_name.outputs.VERSION }} -p:Version=${{ steps.get_tag_name.outputs.VERSION }} --include-symbols --include-source
        working-directory: ./shesha-core

      # ============ PUBLISH ===============

      # push nuget packages
      - name: Dotnet Nuget Push
        run: dotnet nuget push "../dist/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate
        working-directory: ./shesha-core
      # publish shesha-reactjs to npmjs registry
      - name: Publish shesha-reactjs to npmjs registry
        run: npm publish --access public
        working-directory: ./shesha-reactjs
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPMJS_API_KEY }}
